apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: kured
  namespace: kube-system
spec:
  interval: 10m
  timeout: 5m
  chart:
    spec:
      chart: kured
      version: '5.3.1'
      sourceRef:
        kind: HelmRepository
        name: kured-repo
      interval: 5m
  releaseName: kured
  values:
    fullnameOverride: kured
    configuration:
      lockTtl: "60m"
      blockingPodSelector: ["block-reboot=block"]  
      period: "5m"
      forceReboot: false
      drainDelay: "2m"
      drainTimeout: "20m"
      rebootSentinelCommand: "bash -c 'uptime_sec=$(cut -d \" \" -f1 /proc/uptime | cut -d \".\" -f1); uptime_days=$((uptime_sec / 86400)); [[ $uptime_days -ge 0 || -f /var/run/reboot-required ]]' && exit 0 || exit 1"
      lockReleaseDelay: "2m"
  postRenderers:
    - kustomize:
        patches:
          - target:
              kind: DaemonSet
              name: kured
              namespace: kube-system
            patch: |-
              apiVersion: apps/v1
              kind: DaemonSet
              metadata:
                name: kured
                namespace: kube-system
              spec:
                template:
                  spec:
                    imagePullSecrets:
                    - name: regcred
                    containers:
                    - name: leader-election-sidecar
                      image: docker.io/harryvinod/kured-helper:v3
                      imagePullPolicy: Always
                      securityContext:
                        runAsNonRoot: true
                        runAsUser: 65535
                      env:
                      - name: NODE_ID
                        valueFrom:
                          fieldRef:
                            fieldPath: spec.nodeName
                      - name: pd-service-name
                        value: "aks-prof-01-cluster"
          - target:
              kind: ClusterRole
              name: kured
            patch: |-
              apiVersion: rbac.authorization.k8s.io/v1
              kind: ClusterRole
              metadata:
                name: kured
              rules:
              - apiGroups: [""]
                resources: ["events"]
                verbs: ["get", "list"]
              - apiGroups: [""]
                resources: ["nodes"]
                verbs: ["get", "list", "patch"]
              - apiGroups: ["policy"]
                resources: ["poddisruptionbudgets"]
                verbs: ["get", "list"]
              - apiGroups: [""]
                resources: ["pods", "pods/log"]
                verbs: ["get", "patch", "delete", "list", "watch"]
              - apiGroups: ["extensions"]
                resources: ["daemonsets"]
                verbs:     ["get"]
              - apiGroups: ["apps"]
                resources: ["daemonsets"]
                verbs:     ["get"]
              - apiGroups: [""]
                resources: ["pods/eviction"]
                verbs:     ["create"]
          - target:
              kind: ClusterRoleBinding
              name: kured
            patch: |-
              apiVersion: rbac.authorization.k8s.io/v1
              kind: ClusterRoleBinding
              metadata:
                name: kured
              subjects:
              - kind: ServiceAccount
                name: kured
                namespace: kube-system
              roleRef:
                kind: ClusterRole
                name: kured
                apiGroup: rbac.authorization.k8s.io
          - target:
              kind: Role
              name: kured
              namespace: kube-system
            patch: |-
              apiVersion: rbac.authorization.k8s.io/v1
              kind: Role
              metadata:
                name: kured
                namespace: kube-system
              rules:
              - apiGroups: ["apps"]
                resources: ["daemonsets"]
                verbs: ["list", "patch", "update"]
              - apiGroups: [""]
                resources: ["secrets"]
                verbs: ["get"]
              - apiGroups: [""]
                resources: ["pods"]
                verbs: ["get", "patch", "delete"]
              - apiGroups: ["extensions"]
                resources: ["daemonsets"]
                verbs: ["update", "patch"]
          - target:
              kind: RoleBinding
              name: kured
              namespace: kube-system
            patch: |-
              apiVersion: rbac.authorization.k8s.io/v1
              kind: RoleBinding
              metadata:
                name: kured
                namespace: kube-system
              subjects:
              - kind: ServiceAccount
                name: kured
              roleRef:
                kind: Role
                name: kured
                apiGroup: rbac.authorization.k8s.io
